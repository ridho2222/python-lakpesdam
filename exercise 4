# -*- coding: utf-8 -*-
"""
Created on Sun Sep 29 10:00:00 2024
"""

import yfinance as yf
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression
from datetime import datetime, timedelta
import numpy as np

class StockPredictor:
    def __init__(self, ticker, start_date, end_date):
        self.ticker = ticker
        self.start_date = start_date
        self.end_date = end_date
        self.data = None
        self.model = LinearRegression()

    def download_data(self):
        self.data = yf.download(self.ticker, start=self.start_date, end=self.end_date)
        self.data['dates_numeric'] = self.data.index.map(pd.Timestamp.timestamp)
    
    def perform_regression(self):
        X = self.data['dates_numeric'].values.reshape(-1, 1)
        y = self.data['Adj Close']
        self.model.fit(X, y)
        self.data['trend'] = self.model.predict(X)
    
    def predict_future(self, future_days=365):
        last_date = self.data.index.max()
        last_date_numeric = pd.Timestamp(last_date).timestamp()
        future_dates_numeric = np.array([last_date_numeric + i*86400 for i in range(1, future_days + 1)]).reshape(-1, 1)
        future_dates = [last_date + timedelta(days=i) for i in range(1, future_days + 1)]
        future_pred = self.model.predict(future_dates_numeric)
        return future_dates, future_pred

    def plot(self, future_days=365):
        plt.figure(figsize=(15, 6))
        
   
        plt.plot(self.data.index, self.data["Adj Close"], label="Adj Close", color="blue")
        
        
        plt.plot(self.data.index, self.data['trend'], label="Interpolation (Trend)", c="orange", linestyle="-")
        

        future_dates, future_pred = self.predict_future(future_days)
        plt.plot(future_dates, future_pred, label="Prediction (1 Year)", c="red", linestyle="--")
        
       
        plt.grid(linestyle=":")
        plt.ylabel("Price ($)")
        plt.title(f"{self.ticker} stock price from {self.start_date} to {self.end_date} and prediction based on its trend")
        
  
        plt.legend()
        plt.savefig(f"{self.ticker}_Stock_Prediction.png", dpi=300)
        plt.show()


ticker = "MSFT"
start_date = "2020-01-01"
end_date = "2024-09-01"

predictor = StockPredictor(ticker, start_date, end_date)
predictor.download_data()
predictor.perform_regression()
predictor.plot(future_days=365)
